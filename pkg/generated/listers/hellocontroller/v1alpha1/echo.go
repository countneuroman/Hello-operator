// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	hellocontrollerv1alpha1 "github.com/countneuroman/hello-operator/pkg/apis/hellocontroller/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// EchoLister helps list Echos.
// All objects returned here must be treated as read-only.
type EchoLister interface {
	// List lists all Echos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hellocontrollerv1alpha1.Echo, err error)
	// Echos returns an object that can list and get Echos.
	Echos(namespace string) EchoNamespaceLister
	EchoListerExpansion
}

// echoLister implements the EchoLister interface.
type echoLister struct {
	listers.ResourceIndexer[*hellocontrollerv1alpha1.Echo]
}

// NewEchoLister returns a new EchoLister.
func NewEchoLister(indexer cache.Indexer) EchoLister {
	return &echoLister{listers.New[*hellocontrollerv1alpha1.Echo](indexer, hellocontrollerv1alpha1.Resource("echo"))}
}

// Echos returns an object that can list and get Echos.
func (s *echoLister) Echos(namespace string) EchoNamespaceLister {
	return echoNamespaceLister{listers.NewNamespaced[*hellocontrollerv1alpha1.Echo](s.ResourceIndexer, namespace)}
}

// EchoNamespaceLister helps list and get Echos.
// All objects returned here must be treated as read-only.
type EchoNamespaceLister interface {
	// List lists all Echos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*hellocontrollerv1alpha1.Echo, err error)
	// Get retrieves the Echo from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*hellocontrollerv1alpha1.Echo, error)
	EchoNamespaceListerExpansion
}

// echoNamespaceLister implements the EchoNamespaceLister
// interface.
type echoNamespaceLister struct {
	listers.ResourceIndexer[*hellocontrollerv1alpha1.Echo]
}
