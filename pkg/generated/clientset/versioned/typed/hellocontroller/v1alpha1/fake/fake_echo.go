// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/countneuroman/hello-operator/pkg/apis/hellocontroller/v1alpha1"
	hellocontrollerv1alpha1 "github.com/countneuroman/hello-operator/pkg/generated/clientset/versioned/typed/hellocontroller/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeEchos implements EchoInterface
type fakeEchos struct {
	*gentype.FakeClientWithList[*v1alpha1.Echo, *v1alpha1.EchoList]
	Fake *FakeHelloV1alpha1
}

func newFakeEchos(fake *FakeHelloV1alpha1, namespace string) hellocontrollerv1alpha1.EchoInterface {
	return &fakeEchos{
		gentype.NewFakeClientWithList[*v1alpha1.Echo, *v1alpha1.EchoList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("echos"),
			v1alpha1.SchemeGroupVersion.WithKind("Echo"),
			func() *v1alpha1.Echo { return &v1alpha1.Echo{} },
			func() *v1alpha1.EchoList { return &v1alpha1.EchoList{} },
			func(dst, src *v1alpha1.EchoList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.EchoList) []*v1alpha1.Echo { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.EchoList, items []*v1alpha1.Echo) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
